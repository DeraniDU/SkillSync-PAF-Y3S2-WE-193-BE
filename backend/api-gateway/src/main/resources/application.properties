# Server Configuration
server.port=8090
spring.application.name=api-gateway

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# Spring Cloud Gateway Routes
# User Service Routes - Include OAuth2 paths
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**, /login/**, /oauth2/**

# Skills Service Routes
spring.cloud.gateway.routes[1].id=skills-service
spring.cloud.gateway.routes[1].uri=lb://SKILLS-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/skills/**

# Posts Service Routes
spring.cloud.gateway.routes[2].id=posts-service
spring.cloud.gateway.routes[2].uri=lb://POSTS-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/posts/**

# Collaboration Service Routes
spring.cloud.gateway.routes[3].id=collaboration-service
spring.cloud.gateway.routes[3].uri=lb://COLLABORATION-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/collaborations/**

# Google OAuth2 Client Config for Gateway
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8090/login/oauth2/code/google

# CORS Configuration
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:3000
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

spring.cloud.compatibility-verifier.enabled=false

# Actuator Endpoints
management.endpoints.web.exposure.include=*